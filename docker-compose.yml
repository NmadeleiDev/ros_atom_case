version: "3"
services:
  traefik: # Ingress and gateway
    image: "traefik:v2.5.1"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--ping"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.secure.address=:443"
      # - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.email=tony.brekhov@gmail.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    labels:
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.middlewares.auth.basicauth.users=abrekhov:$$1$$w6OraKMT$$1jLUBTthmJK8MI/yWM2y01"
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOST:-localhost}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=test-compress,auth"
      # openssl passwd -1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
      - ./backend/:/app/:rw # для правки кода без перезагрузки
      - ./images:/service_data/images
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

      DEBUG: ${DEBUG}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/backend" # declare middleware
      - "traefik.http.routers.rosatom-backend.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.rosatom-backend.middlewares=test-compress,backend-stripprefix" # apply middleware
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
      # args:
      #   NEXT_PUBLIC_BACKEND_HOSTNAME: rosatom.ml
      #   NEXT_PUBLIC_PROTOCOL: https
    environment:
      NEXT_PUBLIC_BACKEND_HOSTNAME: startup-guide.ml
      NEXT_PUBLIC_PROTOCOL: https
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.routers.rosatom-front.rule=Host(`${HOST:-localhost}`)"
      - "traefik.http.routers.rosatom-front.middlewares=test-compress" # apply middleware
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    labels: # endpoint only for dev
      - "traefik.enable=true"
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.middlewares.db-stripprefix.stripprefix.prefixes=/db" # declare middleware
      - "traefik.http.routers.rosatom-db.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/db`)"
      - "traefik.http.routers.rosatom-db.middlewares=test-compress,db-stripprefix" # apply middleware
    # check with docker run -it --rm --network rolling_drones_default postgres psql -h db -U postgres
  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "./parser/:/app/:rw" # для правки кода без перезагрузки
      - "./images/:/images" 
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
