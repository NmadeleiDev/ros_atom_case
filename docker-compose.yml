version: '3'
services: 
  traefik: # Ingress and gateway
    image: "traefik:v2.5.1"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--ping"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.secure.address=:443"
      # - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.email=tony.brekhov@gmail.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    labels:
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.middlewares.auth.basicauth.users=abrekhov:$$1$$w6OraKMT$$1jLUBTthmJK8MI/yWM2y01"
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOST:-localhost}`) && (PathPrefix(`/dashboard`) || PathPrefix(`/api`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=test-compress,auth"
      # openssl passwd -1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime/:ro
      - ./backend/:/app/:rw # для правки кода без перезагрузки
    environment:
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_PORT: ${MONGO_PORT}

      DEBUG: ${DEBUG}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.test-compress.compress=true" 
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/backend" # declare middleware
      - "traefik.http.routers.rosatom-backend.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.rosatom-backend.middlewares=test-compress,backend-stripprefix" # apply middleware
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
      # args:
      #   NEXT_PUBLIC_BACKEND_HOSTNAME: rosatom.ml
      #   NEXT_PUBLIC_PROTOCOL: https
    environment:
      NEXT_PUBLIC_BACKEND_HOSTNAME: startup-guide.ml
      NEXT_PUBLIC_PROTOCOL: https
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.test-compress.compress=true" 
      - "traefik.http.routers.rosatom-front.rule=Host(`${HOST:-localhost}`)"
      - "traefik.http.routers.rosatom-front.middlewares=test-compress" # apply middleware
  #db-mongo:
  #  image: mongo:5.0.3
  #  restart: always
  #  volumes:
  #    - ./db_data:/data/db
  #  ports:
  #    - ${MONGO_PORT}:27017
  #  environment:
  #    MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
  #    MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  #  labels: # endpoint only for dev
  #    - "traefik.enable=true"
  #    - "traefik.http.middlewares.test-compress.compress=true" 
  #    - "traefik.http.middlewares.db-mongo-stripprefix.stripprefix.prefixes=/db-mongo" # declare middleware
  #    - "traefik.http.routers.db-mongo.rule=Host(`${HOST:-localhost}`) && PathPrefix(`/db-mongo`)"
  #    - "traefik.http.routers.db-mongo.middlewares=test-compress,db-mongo-stripprefix" # apply middleware
  #    #- "traefik.http.routers.db-mongo.entrypoints=secure"
  #    #- "traefik.http.routers.db-mongo.tls.certresolver=myresolver"